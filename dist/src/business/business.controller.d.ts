import { BusinessService } from './business.service';
import { CreateBusinessDto, UpdateBusinessDto } from './dto/business.dto';
export declare class BusinessController {
    private readonly businessService;
    constructor(businessService: BusinessService);
    create(data: CreateBusinessDto): Promise<{
        userId: string;
        createdAt: Date;
        name: string;
        locationId: string;
        phones: string[];
        location: string;
        services: string[];
        keywords: string[];
        targetLocations: string[];
        website: string | null;
        coordinates: import("@prisma/client/runtime/library").JsonValue;
        cid: string | null;
        imagePrompt: string | null;
        active: boolean;
        gmbData: import("@prisma/client/runtime/library").JsonValue;
    }>;
    findAll(userId?: string): Promise<{
        userId: string;
        createdAt: Date;
        name: string;
        locationId: string;
        phones: string[];
        location: string;
        services: string[];
        keywords: string[];
        targetLocations: string[];
        website: string | null;
        coordinates: import("@prisma/client/runtime/library").JsonValue;
        cid: string | null;
        imagePrompt: string | null;
        active: boolean;
        gmbData: import("@prisma/client/runtime/library").JsonValue;
    }[]>;
    findOne(id: string): Promise<{
        userId: string;
        createdAt: Date;
        name: string;
        locationId: string;
        phones: string[];
        location: string;
        services: string[];
        keywords: string[];
        targetLocations: string[];
        website: string | null;
        coordinates: import("@prisma/client/runtime/library").JsonValue;
        cid: string | null;
        imagePrompt: string | null;
        active: boolean;
        gmbData: import("@prisma/client/runtime/library").JsonValue;
    } | null>;
    update(id: string, data: UpdateBusinessDto): Promise<{
        userId: string;
        createdAt: Date;
        name: string;
        locationId: string;
        phones: string[];
        location: string;
        services: string[];
        keywords: string[];
        targetLocations: string[];
        website: string | null;
        coordinates: import("@prisma/client/runtime/library").JsonValue;
        cid: string | null;
        imagePrompt: string | null;
        active: boolean;
        gmbData: import("@prisma/client/runtime/library").JsonValue;
    }>;
    remove(id: string): Promise<{
        userId: string;
        createdAt: Date;
        name: string;
        locationId: string;
        phones: string[];
        location: string;
        services: string[];
        keywords: string[];
        targetLocations: string[];
        website: string | null;
        coordinates: import("@prisma/client/runtime/library").JsonValue;
        cid: string | null;
        imagePrompt: string | null;
        active: boolean;
        gmbData: import("@prisma/client/runtime/library").JsonValue;
    }>;
    getServices(locationId: string): Promise<string[]>;
    getKeywords(locationId: string): Promise<string[]>;
}
