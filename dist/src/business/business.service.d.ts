import { PrismaService } from 'prisma/prisma.service';
import { CreateBusinessDto, UpdateBusinessDto } from './dto/business.dto';
import { MailService } from '../mail/mail.service';
export declare class BusinessService {
    private prisma;
    private mailService;
    constructor(prisma: PrismaService, mailService: MailService);
    create(data: CreateBusinessDto): Promise<{
        userId: string;
        createdAt: Date;
        name: string;
        locationId: string;
        phones: string[];
        location: string;
        services: string[];
        keywords: string[];
        targetLocations: string[];
        website: string | null;
        coordinates: import("@prisma/client/runtime/library").JsonValue;
        cid: string | null;
        imagePrompt: string | null;
        active: boolean;
        gmbData: import("@prisma/client/runtime/library").JsonValue;
    }>;
    findAll(): Promise<{
        userId: string;
        createdAt: Date;
        name: string;
        locationId: string;
        phones: string[];
        location: string;
        services: string[];
        keywords: string[];
        targetLocations: string[];
        website: string | null;
        coordinates: import("@prisma/client/runtime/library").JsonValue;
        cid: string | null;
        imagePrompt: string | null;
        active: boolean;
        gmbData: import("@prisma/client/runtime/library").JsonValue;
    }[]>;
    findAllByUserId(userId: string): Promise<{
        userId: string;
        createdAt: Date;
        name: string;
        locationId: string;
        phones: string[];
        location: string;
        services: string[];
        keywords: string[];
        targetLocations: string[];
        website: string | null;
        coordinates: import("@prisma/client/runtime/library").JsonValue;
        cid: string | null;
        imagePrompt: string | null;
        active: boolean;
        gmbData: import("@prisma/client/runtime/library").JsonValue;
    }[]>;
    findOne(locationId: string): Promise<{
        userId: string;
        createdAt: Date;
        name: string;
        locationId: string;
        phones: string[];
        location: string;
        services: string[];
        keywords: string[];
        targetLocations: string[];
        website: string | null;
        coordinates: import("@prisma/client/runtime/library").JsonValue;
        cid: string | null;
        imagePrompt: string | null;
        active: boolean;
        gmbData: import("@prisma/client/runtime/library").JsonValue;
    } | null>;
    update(locationId: string, data: UpdateBusinessDto): Promise<{
        userId: string;
        createdAt: Date;
        name: string;
        locationId: string;
        phones: string[];
        location: string;
        services: string[];
        keywords: string[];
        targetLocations: string[];
        website: string | null;
        coordinates: import("@prisma/client/runtime/library").JsonValue;
        cid: string | null;
        imagePrompt: string | null;
        active: boolean;
        gmbData: import("@prisma/client/runtime/library").JsonValue;
    }>;
    remove(locationId: string): Promise<{
        userId: string;
        createdAt: Date;
        name: string;
        locationId: string;
        phones: string[];
        location: string;
        services: string[];
        keywords: string[];
        targetLocations: string[];
        website: string | null;
        coordinates: import("@prisma/client/runtime/library").JsonValue;
        cid: string | null;
        imagePrompt: string | null;
        active: boolean;
        gmbData: import("@prisma/client/runtime/library").JsonValue;
    }>;
    getServices(locationId: string): Promise<string[]>;
    getKeywords(locationId: string): Promise<string[]>;
}
